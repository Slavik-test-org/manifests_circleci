version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: abc6e07c4b99506e38eb1d4296e3ecf26a386bdcd218237eefab1a0ea770ac6d
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: install-aws-creds
          command: chmod +x ./aws_credentials.sh && ./aws_credentials.sh
      - run:
          name: install-imagemagick
          command: sudo apt-get install imagemagick -y
      - run:
          name: lint
          command: yarn clean
      - run:
          name: test
          command: yarn test
      - run:
          name: codecov
          command: ./node_modules/.bin/codecov
      - run:
          name: Run tests with JUnit as reporter
          command: ./node_modules/.bin/jest --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/test-results.xml'
      - store_artifacts:
          path: reports/junit/test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: reports/junit/test-results.xml
      - run:
          name: codeclimate
          command: |
            ./cc-test-reporter format-coverage -t lcov coverage/lcov.info
            ./cc-test-reporter upload-coverage
            ./cc-test-reporter after-build --exit-code $?
